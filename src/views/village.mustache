{{> partials/header }}
<h1 class="title" id="role">Player</h1>
<h2 class="subtitle town"></h2>
<div class="container">
    <div class="columns">
        <div id="dashboard" class="column">
            <h2 class="subtitle">Dashboard</h2>
            <!-- TODO dashboard -->
        </div>
        <div id="chats" class="column">
            <h2 class="subtitle">Chat and logs</h2>
            <ul id="messages"></ul>
            <form id="villagerForm" action="" class="is-primary">
                <div class="field has-addons has-addons-centered">
                    <div class="control is-expanded">
                        <div class="select is-fullwidth">
                            <select name="cmd" id="mtype">
                                <option value="chat">üí¨ - Chat</option>
                                <option value="wolf">üê∫ - Werewolf</option>
                                <option value="dm">‚û°Ô∏è - DM - WIP</option>
                                <option value="nick">‚úèÔ∏è - Change nick</option>
                            </select>
                        </div>
                    </div>
                    <input id="m" class="input" autocomplete="off" />
                    <div class="control">
                        <button type="submit" class="button is-primary">Send</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script>
    $(function (global) {
        var url = new URL(window.location.href);
        var socket = io.connect(window.location.host + '/general');
        global.nick = "villager" + new Date().getTime().toString();
        global.role = "Player";
        global.wolf = false;
        global.wolves = undefined;
        room = window.location.hash.toString();

        console.log(room);

        $('.town').text('on '+room);

        socket.emit('join room', room, global.nick);

        socket.on('connect', function () {
            socket.emit('new connection', global.nick);
            var n = global.nick;
            socket.on('disconnect', function(room, n) {
                socket.emit('disconnection', room, n);
            });
        });

        $('#villagerForm').submit(function(e){
            e.preventDefault();
            var n = global.nick;
            mtype = $('#mtype').val();
            msg = $('#m').val();
            switch (mtype) {
                case "wolf":
                    global.wolf
                        ? wolves.emit('wolf message', room, n, msg)
                        : alert("You are not a Werewolf!");
                    break;
                /*

            TODO: I must create the DM message to other players...
            TODO: Getting the role by pressing a button should be better.

                case "role":
                    if (global.role == "Viewer")
                        socket.emit('request role', room, nick);
                    else alert("You do have a role!");
                    break;
                    
            TODO: Init game, identify players and abort game should be done
            by the Game Master in the Dashboard!


                case "iden":
                    if (global.role == "GAMEMASTER")
                        socket.emit('get identities', room);
                    else alert("You don't have permissions to get identities!");
                    break;
                case "abrt":
                    if (global.role == "GAMEMASTER") socket.emit('abort game', room);
                    else alert("You don't have permissions to abort the game!");
                    break;

                */
                case "init":
                    if (nick == "GAMEMASTER")
                        socket.emit('init game', {
                            room,
                            w: msg.split(" ")[0] || 2,
                            v: msg.split(" ")[1] || 2,
                            r: msg.split(" ")[2] || 31
                        });
                    else alert("Only GAMEMASTER has permissions to init games");
                    break;
                case "nick":
                    socket.emit('change nick', room, n, msg.split(" ")[0]);
                    global.nick = msg.split(" ")[0];
                    break;
                case "chat":
                    msg != ""
                        ? socket.emit('chat message', room, n, msg)
                        : alert("Message is empty!");
                    break;
                default:
                    alert("ERROR: Command not found.");
            }
            
            $('#m').val('');
            $('#mtype').val('chat');
            return false;
        });

        socket.on('chat message', function(nick, msg) {
            $('#messages')
                .append($('<li>')
                    .text(msg)
                    .append($('<span class="tag is-' + (nick == "GAMEMASTER" ? "info" : "dark") + '">')
                        .text(nick)));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('role assignation', function(r) {
            $('#role').text(r);
            global.role = r;
            $('#messages').append($('<li class="server">').text('Your role is now ' + r + '!'));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
            if (r == "Werewolf" || r == "GAMEMASTER") {
                if (r == "GAMEMASTER") global.nick = "GAMEMASTER";
                global.wolf = true;
                global.wolves = io.connect(window.location.host + '/wolves');
                
                global.wolves.on('connect', function() {
                    global.wolves.emit('join wolves', room);
                });
                global.wolves.on('wolf message', function(nick, msg) {
                    $('#messages')
                        .append($('<li class="wolves">')
                            .text(msg)
                            .append($('<span class="tag is-danger">')
                                .text(nick)));
                });
            }
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('game aborted', function() {
            $('#messages').append($('<li class="server is-danger">').text('Game aborted! Reload page.'));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('no role available', function() {
            $('#messages').append($('<li class="server is-danger">').text('No role available.'));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('gamemaster', function(code) {
            $('#messages').append($('<li class="server">').text('You have created the game!'));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('nick changed', function (msg) {
            $('#messages').append($('<li class="server">').text(msg.oldNick + ' is now ' + msg.newNick));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('get identities', function (msg) {
            $('#messages').append($('<li class="server">').text(msg));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        });
        socket.on('leaving', function (nick) {
            $('#messages').append($('<li class="server">').text(nick + ' left.'));
            $("#messages").animate({ scrollTop: ($("#messages").children('li').length - 1) * 100 }, 100);
        })
    }(this));
</script>
{{> partials/footer }}